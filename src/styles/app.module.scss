@use './utils.module' as u;
@use './layout.module' as l;
@use './text.module' as t;
@use './colors.module' as c;

.confettiWrapper {
  position: fixed;
  transform: translateY(-20px);
  left: 0;
  right: 0;
  width: 100%;
  height: 20px;
  pointer-events: none;
  z-index: 10;
}

.header {
  @include l.useSectionContainer;
  background-color: var(--c-surface);
  background-image: url('/dotted-bg.svg');
  background-attachment: fixed;

  & ::selection {
    color: var(--c-surface);
    background-color: var(--c-primary);
  }
}

.headerContentContainer {
  @include l.useContentContainer;
  @include l.useFlex($direction: row, $justify: space-between);
  gap: 16px;

  padding: 24px 0;
  min-height: 231px;

  @include u.useBreakpoint(450) {
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
  }
}

.logoWrapper {
  @include l.useFlex($direction: row, $justify: space-between);
  gap: 2px;

  & h2 {
    @include t.useHeading;

    @include u.useBreakpoint(450) {
      font-size: u.toRem(24);
    }
  }
}

.statsWrapper {
  @include l.useFlex($direction: row, $align: stretch);

  @include u.useBreakpoint(450) {
    align-self: center;
  }
}

.profileContainer {
  @include l.useFlex($justify: space-between);
  padding: 22px 12px 12px 12px;
  text-decoration: none;
  border-radius: 4px;
  color: var(--c-on-surface);
  gap: 2px;
  transition: background-color 100ms ease-in;

  @media (hover: hover) {
    &:hover {
      background-color: c.composeLayeredColor("surface", "on-surface");
    }
  }
}

.profilePic {
  width: 32px;
  border-radius: 50%;
}

.profileLabelWrapper {
  @include l.useFlex($direction: row, $align: center);
}

.profileLabel {
  @include t.useTitle;
}

.mainWrapper {
  @include l.useSectionContainer;

  @include u.useBreakpoint(450) {
    padding: 0;
  }
}

.pageMainHeading {
  @include u.useSROnly;
}

.mainContentWrapper {
  @include l.useFlex($align: stretch);
  @include l.useContentContainer;
  position: relative;
  gap: 24px;
  padding: 72px 0 24px 0;
  transform: translateY(-32px);

  @include u.useBreakpoint(450) {
    padding: 0 0 80px 0;
  }
}

.tasksListWrapper,
.tasksEmptyListWrapper {
  position: relative;
  border-top: 1px solid var(--c-outline);
  z-index: 3;

  ul,
  li {
    list-style: none;
    padding: 0;
    margin: 0;
  }
}

.tasksListWrapper {
  background-color: c.composeLayeredColor("background", "on-surface", 1);
}

.tasksListWrapper[data-focus-within="true"][data-dragging-within="false"] {
  background-color: transparent;
}

.tasksEmptyListWrapper {
  background-color: transparent;
}

.tasksListWrapper[data-dragging-within="true"]>* {
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}